# TODO Sun Aug 17 11:10:13 2014 GMT
# $Id: TODO 22 2014-08-23 15:46:49Z abalama $

# GENERAL

  * Прикрутить тестирование TEST { } -- сейчас стоит заглушка

  * Научить заливать бэкапы на коллектор collector.cgi используя HTTP POST multipart механизм 
    передачи данных. в качестве параметров должны выступать:
     - URL/URI (https://user:password@site.com/path/)
       - <user>     = user
       - <password> = password
     (- action = upload -- необязательный параметр) 
     - host   = имя хоста
     - file   = имя файла 
     - data   = данные передаваемые из сжатого файла
     - . . .  = . . .
    user и password уходят исключительно в стандартную авторизацию если это требует сервер

  * При соответствующем флаге отправлять на коллектор данные об статусе выполнения бэкапа и следукющий
    набор данных сохраняющийся в SQLite:
     - ID
     - Date stamp
     - Agent host (кто делает бэкап)
     - Agent IP
     - Agent section name
     - Server host (куда делается бэкап)
     - Server IP (берется из заголовков настройки или nslookup утилитлй как на CBWI)
     - Status of operation (1=OK/0=ERROR)
     - Date start
     - Date finish
     - File name
     - File size
     - File MD5 sum
     - File SHA1 sum
     - Message (табличка результативная)
     - Comment (из секции конфигурация по хосту Comment)
    Далее эти данные отображаются на WEB интерфейсе коллектора

  * При каждом неуспешном прохождении бэкапа отправляется информационное письмо письмо.
    на непрохождение оказывает влияние доступность коллектора, делается соответствующий пинг (action=status)

  * Коллектор это часть App::MBUtiny, но существует интеграция с MonM. MonM смотрит, если есть 
    установленный модуль App::MBUtiny то он пытается построить соответвующий грид по данным коллектора
    Коллектор это проект на базе WWW::MLite выполняющий функцую API. Обмен - исключительно XML! коллектор
    состоит из mbucollector.cgi и модулей App::MBUtiny::Collector + App::MBUtiny::Collector::*
    Коллектор берёт конфигурацию из установленного локально проекта App::MBUtiny используя файл collector.conf

  * Написать функцию restore и опробовать ее в работе. см. mbu.pl для примера. Получение файлов
    можно и нужно реализовать через File::Fetch
      
# BUGS

    * none

# REFACTORING

    * none

# DOCUMENTATION

    * none

# DIAGNOSTICS

    * none

# SUPPORT

    * none
